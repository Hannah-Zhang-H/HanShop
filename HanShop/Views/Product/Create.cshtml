@* for staff/admin to create a new product *@
@model HanShop.Models.Product

@{
    ViewBag.Title = "Create";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h2 class="text-center">Create New Products</h2>

<form action="" id="myForm" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.storage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.storage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.storage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>


        @* upload product Img *@
        <div class="form-group">
            @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="width-main input" type="file" datatype="*" id="pic" name="pic" value="" accept="image/*" onchange="upload(event)">
                <input type="hidden" name="Img" id="Img" value="" />
                <div id="showImg"></div>
            </div>
        </div>



        @* create button *@
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>




@* back to list *@
<div class="text-center">
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
    //Implementation for asynchronous upload functionality
    function upload(event) {
        var imgPath = $("#pic").val();
        console.log(imgPath);
        //Check if the file's extension meets the criteria.
        var strExtension = imgPath.substr(imgPath.lastIndexOf('.') + 1);

        if (strExtension != 'jpg' && strExtension != 'gif' && strExtension != 'png' && strExtension != 'bmp') {
            alert("Please choose an Image.");
            return;
        }
        //upload the picture
        if (event.target.files[0].type.search('image') !== -1) {
            var formData = new FormData($("#myForm")[0]);// to create a file stream object
            $.ajax({
                url: "/Upload/file",
                type: "post",
                cache: false,
                processData: false,
                contentType: false,
                data: formData,
                success: function (res) {
                    //console.log(res);
                    if (res.trim() == "209") {
                        alert("Please selet an Image！");
                        return;
                    }
                    if (res.trim() == "300") {
                        alert("The uploading picture cannot be a null one");
                        return;
                    }
                    if (res.trim() == "400") {
                        alert("Uploading failed");
                        return;
                    }
                    $("#showImg").html("<img src='" + res + "' width='50' height='50' /><p style='color:green;'>Successfully uploaded！</p>");
                    //save the image path(string) into Image.
                    var res = res.trim(); //delete space if there is any
                    $("#Img").val(res);
                },
                error: function (res) {
                    alert("Uploading error");
                }
            });
        } else {
            alert('Only pictures permitted.');
        }
    }

</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
